//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MMO3D.Engine {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MMO3D.Engine.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap Cloudy {
            get {
                object obj = ResourceManager.GetObject("Cloudy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Compass {
            get {
                object obj = ResourceManager.GetObject("Compass", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;configuration&gt;
        ///  &lt;runtime&gt;
        ///    &lt;assemblyBinding xmlns=&quot;urn:schemas-microsoft-com:asm.v1&quot;&gt;
        ///      &lt;dependentAssembly&gt;
        ///        &lt;assemblyIdentity name=&quot;Microsoft.Build.Framework&quot; publicKeyToken=&quot;b03f5f7f11d50a3a&quot; culture=&quot;neutral&quot;/&gt;
        ///        &lt;bindingRedirect oldVersion=&quot;0.0.0.0-99.9.9.9&quot; newVersion=&quot;3.5.0.0&quot;/&gt;
        ///      &lt;/dependentAssembly&gt;
        ///    &lt;/assemblyBinding&gt;
        ///  &lt;/runtime&gt;
        ///&lt;/configuration&gt;.
        /// </summary>
        internal static string Configuration {
            get {
                return ResourceManager.GetString("Configuration", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap DesertSand {
            get {
                object obj = ResourceManager.GetObject("DesertSand", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Dirt {
            get {
                object obj = ResourceManager.GetObject("Dirt", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Grass {
            get {
                object obj = ResourceManager.GetObject("Grass", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Lava {
            get {
                object obj = ResourceManager.GetObject("Lava", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static byte[] MultiTexturedTerrain {
            get {
                object obj = ResourceManager.GetObject("MultiTexturedTerrain", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no GraphicsDeviceManager present. Please set a GraphicsDeviceManager in order to use full screen mode..
        /// </summary>
        internal static string NoDeviceForFullscreen {
            get {
                return ResourceManager.GetString("NoDeviceForFullscreen", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Pebbles {
            get {
                object obj = ResourceManager.GetObject("Pebbles", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Rock {
            get {
                object obj = ResourceManager.GetObject("Rock", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Sand {
            get {
                object obj = ResourceManager.GetObject("Sand", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Snow {
            get {
                object obj = ResourceManager.GetObject("Snow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;!--
        ///This file contains an xml description of a font, and will be read by the XNA
        ///Framework Content Pipeline. Follow the comments to customize the appearance
        ///of the font in your game, and to change the characters which are available to draw
        ///with.
        ///--&gt;
        ///&lt;XnaContent xmlns:Graphics=&quot;Microsoft.Xna.Framework.Content.Pipeline.Graphics&quot;&gt;
        ///  &lt;Asset Type=&quot;Graphics:FontDescription&quot;&gt;
        ///
        ///    &lt;!--
        ///    Modify this string to change the font that will be imported. Redistributabl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SpriteFontXmlFile {
            get {
                return ResourceManager.GetString("SpriteFontXmlFile", resourceCulture);
            }
        }
        
        internal static byte[] TexturedFluid {
            get {
                object obj = ResourceManager.GetObject("TexturedFluid", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Undefined {
            get {
                object obj = ResourceManager.GetObject("Undefined", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertex data missing or in invalid format..
        /// </summary>
        internal static string VertexDataMissingInvalid {
            get {
                return ResourceManager.GetString("VertexDataMissingInvalid", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Water {
            get {
                object obj = ResourceManager.GetObject("Water", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
