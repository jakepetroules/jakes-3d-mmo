//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Petroules.Synteza.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Petroules.Synteza.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This update system uses MSI installers and is therefore only available on Windows NT or later..
        /// </summary>
        internal static string ApplicationUpdaterWindowsOnly {
            get {
                return ResourceManager.GetString("ApplicationUpdaterWindowsOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} attribute was not found on the specified type {1}..
        /// </summary>
        internal static string AttributeNotFound {
            get {
                return ResourceManager.GetString("AttributeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for updates....
        /// </summary>
        internal static string CheckingForUpdates {
            get {
                return ResourceManager.GetString("CheckingForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed downloading file &quot;{0}&quot;..
        /// </summary>
        internal static string CompletedDownloadingFile {
            get {
                return ResourceManager.GetString("CompletedDownloadingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created temporary directory for installation files..
        /// </summary>
        internal static string CreatedTemporaryDirectory {
            get {
                return ResourceManager.GetString("CreatedTemporaryDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloaded update definition file..
        /// </summary>
        internal static string DownloadedUpdateDefinitionFile {
            get {
                return ResourceManager.GetString("DownloadedUpdateDefinitionFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading file &quot;{0}&quot;....
        /// </summary>
        internal static string DownloadingFile {
            get {
                return ResourceManager.GetString("DownloadingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading update... {0}%.
        /// </summary>
        internal static string DownloadingUpdate {
            get {
                return ResourceManager.GetString("DownloadingUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The download process was manually aborted..
        /// </summary>
        internal static string DownloadProcessManuallyAborted {
            get {
                return ResourceManager.GetString("DownloadProcessManuallyAborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &quot;{0}&quot; was not downloaded intact..
        /// </summary>
        internal static string FileChecksumFailed {
            get {
                return ResourceManager.GetString("FileChecksumFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enhanced Metafile.
        /// </summary>
        internal static string ImageFormatNameEnhancedMetafile {
            get {
                return ResourceManager.GetString("ImageFormatNameEnhancedMetafile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exchangeable image file format.
        /// </summary>
        internal static string ImageFormatNameExchangeableImageFileFormat {
            get {
                return ResourceManager.GetString("ImageFormatNameExchangeableImageFileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graphics Interchange Format.
        /// </summary>
        internal static string ImageFormatNameGraphicsInterchangeFormat {
            get {
                return ResourceManager.GetString("ImageFormatNameGraphicsInterchangeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Joint Photographic Experts Group.
        /// </summary>
        internal static string ImageFormatNameJointPhotographicExpertsGroup {
            get {
                return ResourceManager.GetString("ImageFormatNameJointPhotographicExpertsGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portable Network Graphics.
        /// </summary>
        internal static string ImageFormatNamePortableNetworkGraphics {
            get {
                return ResourceManager.GetString("ImageFormatNamePortableNetworkGraphics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tagged Image File Format.
        /// </summary>
        internal static string ImageFormatNameTaggedImageFileFormat {
            get {
                return ResourceManager.GetString("ImageFormatNameTaggedImageFileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format was ImageFormat.MemoryBmp or was not recognized..
        /// </summary>
        internal static string ImageFormatNameUnrecognized {
            get {
                return ResourceManager.GetString("ImageFormatNameUnrecognized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Bitmap.
        /// </summary>
        internal static string ImageFormatNameWindowsBitmap {
            get {
                return ResourceManager.GetString("ImageFormatNameWindowsBitmap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Icon.
        /// </summary>
        internal static string ImageFormatNameWindowsIcon {
            get {
                return ResourceManager.GetString("ImageFormatNameWindowsIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Metafile.
        /// </summary>
        internal static string ImageFormatNameWindowsMetafile {
            get {
                return ResourceManager.GetString("ImageFormatNameWindowsMetafile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Width or height of captured image cannot be less than or equal to zero..
        /// </summary>
        internal static string ImageSizeTooSmall {
            get {
                return ResourceManager.GetString("ImageSizeTooSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information.
        /// </summary>
        internal static string Information {
            get {
                return ResourceManager.GetString("Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initial poll delay must be between 0 and {0} seconds, inclusive..
        /// </summary>
        internal static string InitialPollDelayMustBeBetween {
            get {
                return ResourceManager.GetString("InitialPollDelayMustBeBetween", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method has already been called..
        /// </summary>
        internal static string MethodAlreadyCalled {
            get {
                return ResourceManager.GetString("MethodAlreadyCalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Lock() method must be called before pixel data can be accessed..
        /// </summary>
        internal static string MustLockBeforeAccessingPixelData {
            get {
                return ResourceManager.GetString("MustLockBeforeAccessingPixelData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No installer found for the specified culture: {0}.
        /// </summary>
        internal static string NoInstallerFound {
            get {
                return ResourceManager.GetString("NoInstallerFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type is not an enumeration..
        /// </summary>
        internal static string NotAnEnumeration {
            get {
                return ResourceManager.GetString("NotAnEnumeration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No update is available.
        /// </summary>
        internal static string NoUpdateAvailable {
            get {
                return ResourceManager.GetString("NoUpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No update URL was specified..
        /// </summary>
        internal static string NoUpdateUrlSpecified {
            get {
                return ResourceManager.GetString("NoUpdateUrlSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path contained one or more invalid characters..
        /// </summary>
        internal static string PathContainedInvalidCharacters {
            get {
                return ResourceManager.GetString("PathContainedInvalidCharacters", resourceCulture);
            }
        }
        
        internal static byte[] PngCrush {
            get {
                object obj = ResourceManager.GetObject("PngCrush", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progress must not be less than zero or greater than 100..
        /// </summary>
        internal static string ProgressMustBeInRange {
            get {
                return ResourceManager.GetString("ProgressMustBeInRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Question.
        /// </summary>
        internal static string Question {
            get {
                return ResourceManager.GetString("Question", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Transparent {
            get {
                object obj = ResourceManager.GetObject("Transparent", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to cast the installation event arguments and retrieve the file name of the downloaded installation file. This indicates a code error, and should never happen..
        /// </summary>
        internal static string UnableToCastEventArguments {
            get {
                return ResourceManager.GetString("UnableToCastEventArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to set the system time..
        /// </summary>
        internal static string UnableToSetSystemTime {
            get {
                return ResourceManager.GetString("UnableToSetSystemTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An update to version {0} is available! You are running {1}.
        /// </summary>
        internal static string UpdateAvailable {
            get {
                return ResourceManager.GetString("UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to check for updates! The error message returned was: {0}.
        /// </summary>
        internal static string UpdateCheckFailed {
            get {
                return ResourceManager.GetString("UpdateCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to check for updates!.
        /// </summary>
        internal static string UpdateCheckFailedShort {
            get {
                return ResourceManager.GetString("UpdateCheckFailedShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application update process has failed! The error message returned was: {0}.
        /// </summary>
        internal static string UpdateFailed {
            get {
                return ResourceManager.GetString("UpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application update process has failed!.
        /// </summary>
        internal static string UpdateFailedShort {
            get {
                return ResourceManager.GetString("UpdateFailedShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The update URL was null..
        /// </summary>
        internal static string UpdateUrlNull {
            get {
                return ResourceManager.GetString("UpdateUrlNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be between 0 and 100, inclusive..
        /// </summary>
        internal static string ValueMustBeInRange {
            get {
                return ResourceManager.GetString("ValueMustBeInRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        internal static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.1//EN&quot; 
        ///   &quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd&quot;&gt;
        ///&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; xml:lang=&quot;en-us&quot; dir=&quot;ltr&quot;&gt;
        ///&lt;head&gt;
        ///    &lt;title&gt;Error Dialog&lt;/title&gt;
        ///    &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html; charset=UTF-8&quot; /&gt;
        ///    &lt;meta http-equiv=&quot;expires&quot; content=&quot;0&quot; /&gt;
        ///    &lt;meta http-equiv=&quot;pragma&quot; content=&quot;no-cache&quot; /&gt;
        ///    &lt;meta http-equiv=&quot;cache-control&quot; content=&quot;no-cache&quot; /&gt;
        ///&lt;/head&gt;
        ///&lt;body styl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string XhtmlDocumentBase {
            get {
                return ResourceManager.GetString("XhtmlDocumentBase", resourceCulture);
            }
        }
    }
}
